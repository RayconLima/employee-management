version: '3'

networks:
  network-employee-manager:

services:
  nginx:
    image: nginx:1.18.0-alpine
    container_name: nginx-employee-manager
    ports:
      - "80:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - network-employee-manager
  php:
    build: docker/php-fpm
    container_name: employee-manager
    entrypoint: /entrypoint.sh
    environment:
      CONTAINER_NAME: PHP
    #user: "1000:1000"
    volumes:
      - ./:/var/www/html
    expose:
      - "9000"
    networks:
      - network-employee-manager
  mysql:
    image: mysql:8
    container_name: mysql-employee-manager
    command: --innodb-use-native-aio=0
    restart: unless-stopped
    tty: true
    volumes:
      - .docker/mysql-data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER:     "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql-employee-manager
    networks:
      - network-employee-manager
  mysql-test:
    image: mysql:8
    tmpfs: /var/lib/mysql
    container_name: mysql-teste-employee-manager
    command: --innodb-use-native-aio=0
    environment:
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql-teste-employee-manager
    networks:
      - network-employee-manager
  phpmyadmin:
    build: docker/phpmyadmin
    container_name: phpmyadmin-employee-manager
    environment:
      PMA_ARBITRARY: 1
    ports:
      - "8080:80"
    volumes:
      - .docker/phpmyadmin/data/sessions:/sessions
    networks:
      - network-employee-manager
  redis:
    image: redis:alpine3.11
    container_name: redis-employee-manager
    expose:
      - 6379
    ports:
      - "6379:6379"
    networks:
      - network-employee-manager
